// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID    Int      @id @default(autoincrement())
  email     String   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  accountID  Int      @id @default(autoincrement())
  userID     Int
  name       String?
  balance    Float    @default(0)
  salt       String
  initVect   String
  cipherText String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Address {
  addressID Int      @id @default(autoincrement())
  accountID Int
  userID    Int
  balance   Float    @default(0)
  address   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  transactionID Int      @id @default(autoincrement())
  userID        Int
  addressID     Int
  accountID     Int
  txhash        String?  @unique
  amount        Float
  date          DateTime @default(now())
  toAddress     String?
  fromAddress   String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model BtcTransaction {
  btcTransactionID Int      @id @default(autoincrement())
  userID           Int
  addressID        Int
  accountID        Int
  txhash           String   @unique
  amount           Float
  confirmations    Int
  date             DateTime @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model BtcTransactionInput {
  btcTransactionInputID Int      @id @default(autoincrement())
  transactionID         Int
  address               String
  amount                Float
  script                String?
  scriptType            String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model BtcTransactionOutput {
  btcTransactionOutputID Int      @id @default(autoincrement())
  transactionID          Int
  address                String
  amount                 Float
  script                 String?
  scriptType             String
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}
